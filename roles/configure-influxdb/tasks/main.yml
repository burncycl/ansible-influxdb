---

- name: Install python + dependencies
  apt:
    name: "{{ packages }}"
    state: latest
  vars:
   packages:
    - python 
    - python-pip 
    - python-requests
    - python-influxdb
    - python3
    - python3-pip 
    - python3-requests
    - python3-influxdb
  tags: configure

- name: Copy "{{ influxdb_pem_filepath }}" 
  copy:
    content: "{{ influxdb_pem }}"
    dest: "{{ influxdb_pem_filepath }}"
    owner: root
    group: root
    mode: 0644
  tags: configure

- name: Remove [admin] line in file if it exists
  lineinfile:
    path: "{{ influxdb_config }}" 
    line: '[admin]'
    state: absent
  tags: configure

- name: Remove [http] line in file if it exists
  lineinfile:
    path: "{{ influxdb_config }}"
    line: '[http]'
    state: absent
  tags: configure

- name: Insert configuration block in "{{ influxdb_config }}"
  blockinfile:
    path: "{{ influxdb_config }}"
    block: |
      [admin]
        enabled = true
        bind-address = ":8083"
        https-enabled = true
        https-certificate = "{{ influxdb_pem_filepath }}"

      [http]
       enabled = true
       bind-address = ":8086"
       auth-enabled = false
       log-enabled = true
       write-tracing = false
       pprof-enabled = false
       https-enabled = true
       https-certificate = "{{ influxdb_pem_filepath }}"
  tags: configure

- name: Restart influxdb service
  systemd:
    name: influxdb
    state: restarted 
  tags: configure

- name: Create database using custom credentials
  influxdb_database:
      hostname: "{{ hostvars[groups['influxdb-nodes'][0]]['ansible_host'] }}" # "{{influxdb_ip_address}}" # uncomment to use different ipaddress. Otherwise will take from inventory.
      username: "{{influxdb_username}}"
      password: "{{influxdb_password}}"
      database_name: "{{influxdb_database_name}}"
      ssl: yes
      validate_certs: no # We're using unsigned certs for this. But, can be switched to 'yes'.
  tags: configure

